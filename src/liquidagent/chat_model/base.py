# AUTOGENERATED! DO NOT EDIT! File to edit: ../../../notebooks/ipynb/05_chat_model_api.ipynb.

# %% auto 0
__all__ = ['Tool', 'ChatModelResponse', 'ChatModelProtocol']

# %% ../../../notebooks/ipynb/05_chat_model_api.ipynb 1
from abc import abstractmethod
from collections.abc import Callable, Iterator
from typing import Protocol

from ollama import ChatResponse as OllamaChatResponse
from ollama import Tool as OllamaTool

from ..config import LiquidAgentConfig

# %% ../../../notebooks/ipynb/05_chat_model_api.ipynb 3
class Tool(OllamaTool):
    pass


class ChatModelResponse(OllamaChatResponse):
    pass


class ChatModelProtocol(Protocol):
    @abstractmethod
    def bind_tools(self, tools: list[Tool | Callable]) -> None:
        self.tools = tools
        raise NotImplementedError

    @abstractmethod
    def invoke(
        self, messages=[], stream: bool = False
    ) -> ChatModelResponse | Iterator[ChatModelResponse]:
        raise NotImplementedError

    @abstractmethod
    def agent(
        self,
        messages=[],
        stream=False,
        available_functions: dict[str, Callable | Tool] = {},
    ) -> ChatModelResponse | Iterator[ChatModelResponse]:
        raise NotImplementedError
